version: '3.9'
services:
  #Servicio para NodeJS
  t2-users:
    container_name: t2-users
    build: . 
    ports:
      - 3000:3000  # Adjust the ports as needed
    depends_on:
      - t2-users-db
    networks:
      - taller2
    environment:
     - NODE_ENV=12

  # Servicio para PostgreSQL
  t2-users-db:
    image: postgres:latest
    container_name: t2-users-db
    restart: always
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - taller2  

  # Servicio para PgAdmin
  t2-users-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: t2-users-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 5050:80
    depends_on:
      - t2-users-db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - taller2
  
  t2-users-prisma:
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prisma-postgres-api
    depends_on:
      - t2-users
      - t2-users-db
    ports:
      - "5051:5051"
    entrypoint: ["bash", "-c", "npx prisma migrate dev --name init"]
    restart: "no"
    networks:
      - taller2

  # datadog:
  #   image: datadog/agent:latest
  #   environment:
  #    - DD_API_KEY=029677d5a3dbc842345b5d858cfa998b
  #    - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
  #    - DD_AGENT_HOST=datadog
  #    - DD_HEALTH_PORT=5555
  #    - DD_SITE=us5.datadoghq.com
  #   volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #    - /proc/:/host/proc/:ro
  #    - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
  #   networks:
  #    - taller2


volumes:    
  postgres-data:
  pgadmin-data:

networks:
  taller2:
    external: true
